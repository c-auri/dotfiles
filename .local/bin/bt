#!/bin/bash

cmd=$(echo $1 | tr '[:lower:]' '[:upper:]')

declare -A id_to_mac
id_to_mac[OR]=20:74:CF:95:54:D2
id_to_mac[QC]=E4:58:BC:3E:0D:E1
id_to_mac[SW]=6C:47:60:DD:F1:63
id_to_mac[WH]=14:3F:A6:F0:69:D7

ids=$(echo ${!id_to_mac[@]} | tr " " "\n" | sort | tr "\n" " " | sed "s/ $//")

if [[ -n $cmd && -z ${id_to_mac[$cmd]} && $cmd != "DC" ]]
then
    options="'$(echo $ids | sed "s/ /', '/g")' or 'DC' to disconnect"
    echo "'$cmd' is not a valid device ID. Options are: $options." >&2
    exit 1
fi

if [[ -z $cmd ]]
then
    devices="$(bluetoothctl paired-devices | cut -d " " -f 2-)"
    connected=$(bluetoothctl info | head -1 | cut -d " " -f 2)
    for id in $ids
    do
        mac=${id_to_mac[$id]}
        [[ $mac == $connected ]] && mark="$(tput bold)êÑÇ$(tput sgr0)" || mark=" "
        id="$(tput setaf 8)[$(tput sgr0)$id$(tput setaf 8)]$(tput sgr0)"
        name="$(echo "$devices" | grep $mac | cut -d " " -f 2-)"
        mac="$(tput setaf 8)$mac$(tput sgr0)"
        echo "$mark $id $mac $name"
    done
    exit
fi

if [[ $cmd == "DC" ]]
then
    bluetoothctl disconnect | tail -1
    exit
fi

bluetoothctl connect ${id_to_mac[$cmd]} | tail -1
