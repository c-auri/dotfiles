#!/bin/bash

alias gs='git status'
alias gd='git diff'
alias gds='git diff --staged'
alias ga='git add'
alias gA='git add -A'
alias gc='git commit'
alias gC='git commit -a'

function gsf # [g]it [s]witch [f]uzzy
{
    git rev-parse 2>/dev/null
    if [[ $? != 0 ]]
    then
        echo "Not a git repository."
        return 1
    fi

    git branch -a | grep -vP "\*|HEAD" | sed "s/remotes\/origin\///" | sort | uniq | fzf | xargs -r git switch
}

function cdr # [c]hange [d]irectory to repository [r]oot
{
    root=$(git rev-parse --absolute-git-dir 2>/dev/null | grep -oP '.*(?=/.git)')
    if [[ $? != 0 ]]
    then
        echo "Not a git repository."
        return 1
    fi

    cd $root
}

alias gp='git push'
alias gpf='git push --force-with-lease'
alias gsw='git switch'
alias gsm='git switch "$(__default_branch)"'
alias gf='git fetch -p'
alias gl='git pull'

function glm # [g]it pul[l] [m]ain - even if not currently on it
{
    defaultBranch=$(__default_branch)
    if [[ $defaultBranch == $(git branch --show-current) ]]
    then
        git pull
    else
        git fetch origin "$defaultBranch:$defaultBranch"
    fi
}

# "git graph" is a custom git alias, see .gitconfig
function gg # [g]it [g]raph - only top commits
{
    # take the number of commits from the first argument, or 10 if omitted:
    num_commits=${1:-10};
    git graph -$num_commits
}

alias gga='git graph' # [g]it [g]raph - [a]ll commits at once

function __default_branch { echo "$(git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@')"; }
